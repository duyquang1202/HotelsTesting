<?php
namespace HotelsBundle\Repository;

use HotelsBundle\Entity\Offer;
use JMS\Serializer\SerializerBuilder;
use JMS\Serializer\SerializationContext;

/**
 * OfferRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OfferRepository extends \Doctrine\ORM\EntityRepository
{

    public function deleteExistsOffersByDate($params)
    {
        $offers = $this->findBy([
            'date' => $params['date']
        ]);
        foreach ($offers as $offer) {
            $this->_em->remove($offer);
            $this->_em->flush();
        }
    }

    public function addAvailableOffers($params = [])
    {
        $date = $params['date'];
        $rooms = $params['rooms'];
        $offers = [];
        $this->deleteExistsOffersByDate([
            'date' => $date
        ]);
        if (!$rooms || count($rooms) == 0) {
            return [];
        }
       
        foreach ($rooms as $room) {
            $offer = new Offer();
            $offer->set('date', $date);
            $offer->setRoom($room);
            $this->_em->persist($offer);
            $this->_em->flush();
            $offers[] = $offer;
        }
        return $offers;
    }

    public function deleteOffer(Offer $offer)
    {
        $this->_em->remove($offer);
        $this->_em->flush();
    }

    public function getFinalResultByJMSGroup($data, $JMSGroup)
    {
        $serializer = SerializerBuilder::create()->build();
        $arrJMSGroup = [
            $JMSGroup
        ];
        if (strpos($JMSGroup, ',')) {
            $arrJMSGroup = explode(',', $JMSGroup);
        }
        $json = $serializer->serialize($data, 'json', SerializationContext::create()->setGroups($arrJMSGroup)
            ->setSerializeNull(true));
        $arr = json_decode($json, true);
        return $arr;
    }
}
